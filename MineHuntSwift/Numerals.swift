//
//  Numerals.swift
//  AlarmClock
//
//  Created by Jonathan French on 22/11/2015.
//  Copyright (c) 2015 App Digital. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

open class Numerals : NSObject {

    //// Cache

    fileprivate struct Cache {
        static let onColour: UIColor = UIColor(red: 0.080, green: 0.077, blue: 0.076, alpha: 1.000)
        static let offColour: UIColor = UIColor(red: 0.751, green: 0.755, blue: 0.749, alpha: 1.000)
    }

    //// Colors

    open class var onColour: UIColor { return Cache.onColour }
    open class var offColour: UIColor { return Cache.offColour }

    //// Drawing Methods

    open class func drawNumber1(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) {

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.close()
        Numerals.onColour.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.close()
        Numerals.offColour.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.close()
        Numerals.offColour.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.close()
        Numerals.offColour.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.close()
        Numerals.offColour.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.close()
        Numerals.onColour.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.close()
        Numerals.offColour.setFill()
        bezier7Path.fill()
    }

    open class func drawNumberDots(frame: CGRect = CGRect(x: 0, y: 0, width: 60, height: 306)) {

        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: frame.minX + floor(frame.width * 0.25000 + 0.5), y: frame.minY + floor(frame.height * 0.36928) + 0.5, width: floor(frame.width * 0.75833) - floor(frame.width * 0.25000 + 0.5) + 0.5, height: floor(frame.height * 0.46895 + 0.5) - floor(frame.height * 0.36928) - 0.5))
        Numerals.onColour.setFill()
        ovalPath.fill()


        //// Oval 2 Drawing
        let oval2Path = UIBezierPath(ovalIn: CGRect(x: frame.minX + floor(frame.width * 0.25000 + 0.5), y: frame.minY + floor(frame.height * 0.54641 + 0.2) + 0.3, width: floor(frame.width * 0.75833) - floor(frame.width * 0.25000 + 0.5) + 0.5, height: floor(frame.height * 0.64608 - 0.3) - floor(frame.height * 0.54641 + 0.2) + 0.5))
        Numerals.onColour.setFill()
        oval2Path.fill()
    }

    open class func drawNumber2(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) {

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.close()
        Numerals.onColour.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.close()
        Numerals.offColour.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.close()
        Numerals.onColour.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.close()
        Numerals.onColour.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.close()
        Numerals.onColour.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.close()
        Numerals.offColour.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.close()
        Numerals.onColour.setFill()
        bezier7Path.fill()
    }

    open class func drawNumber3(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) {

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.close()
        Numerals.onColour.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.close()
        Numerals.offColour.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.close()
        Numerals.onColour.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.close()
        Numerals.onColour.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.close()
        Numerals.offColour.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.close()
        Numerals.onColour.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.close()
        Numerals.onColour.setFill()
        bezier7Path.fill()
    }

    open class func drawNumber4(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) {

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.close()
        Numerals.onColour.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.close()
        Numerals.onColour.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.close()
        Numerals.onColour.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.close()
        Numerals.offColour.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.close()
        Numerals.offColour.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.close()
        Numerals.onColour.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.close()
        Numerals.offColour.setFill()
        bezier7Path.fill()
    }

    open class func drawNumber5(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) {

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.close()
        Numerals.offColour.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.close()
        Numerals.onColour.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.close()
        Numerals.onColour.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.close()
        Numerals.onColour.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.close()
        Numerals.offColour.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.close()
        Numerals.onColour.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.close()
        Numerals.onColour.setFill()
        bezier7Path.fill()
    }

    open class func drawNumber6(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) {

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.close()
        Numerals.offColour.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.close()
        Numerals.onColour.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.close()
        Numerals.onColour.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.close()
        Numerals.onColour.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.close()
        Numerals.onColour.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.close()
        Numerals.onColour.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.close()
        Numerals.onColour.setFill()
        bezier7Path.fill()
    }

    open class func drawNumber7(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) {

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.close()
        Numerals.onColour.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.close()
        Numerals.offColour.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.close()
        Numerals.offColour.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.close()
        Numerals.onColour.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.close()
        Numerals.offColour.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.close()
        Numerals.onColour.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.close()
        Numerals.offColour.setFill()
        bezier7Path.fill()
    }

    open class func drawNumber8(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) {

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.close()
        Numerals.onColour.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.close()
        Numerals.onColour.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.close()
        Numerals.onColour.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.close()
        Numerals.onColour.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.close()
        Numerals.onColour.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.close()
        Numerals.onColour.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.close()
        Numerals.onColour.setFill()
        bezier7Path.fill()
    }

    open class func drawNumber9(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) {

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.close()
        Numerals.onColour.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.close()
        Numerals.onColour.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.close()
        Numerals.onColour.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.close()
        Numerals.onColour.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.close()
        Numerals.offColour.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.close()
        Numerals.onColour.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.close()
        Numerals.onColour.setFill()
        bezier7Path.fill()
    }

    open class func drawNumber0(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) {

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezierPath.close()
        Numerals.onColour.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.47909 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.06896 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.13160 * frame.height))
        bezier2Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.41645 * frame.height))
        bezier2Path.close()
        Numerals.onColour.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.43808 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.49313 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.54819 * frame.height))
        bezier3Path.close()
        Numerals.offColour.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.00000 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.05505 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.11010 * frame.height))
        bezier4Path.close()
        Numerals.onColour.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.20123 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.10096 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier5Path.addLine(to: CGPoint(x: frame.minX + 0.00068 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier5Path.close()
        Numerals.onColour.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.51953 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.99939 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.89913 * frame.width, y: frame.minY + 0.92966 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.86702 * frame.height))
        bezier6Path.addLine(to: CGPoint(x: frame.minX + 0.79886 * frame.width, y: frame.minY + 0.58217 * frame.height))
        bezier6Path.close()
        Numerals.onColour.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.87355 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.99875 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.12652 * frame.width, y: frame.minY + 0.94370 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.24062 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.addLine(to: CGPoint(x: frame.minX + 0.75946 * frame.width, y: frame.minY + 0.88865 * frame.height))
        bezier7Path.close()
        Numerals.onColour.setFill()
        bezier7Path.fill()
    }

    //// Generated Images

    open class func imageOfNumber1(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0)
            Numerals.drawNumber1(frame: CGRect(x: 0, y: 0, width: frame.size.width, height: frame.size.height))

        let imageOfNumber1 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return imageOfNumber1!
    }

    open class func imageOfNumberDots(frame: CGRect = CGRect(x: 0, y: 0, width: 60, height: 306)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0)
            Numerals.drawNumberDots(frame: CGRect(x: 0, y: 0, width: frame.size.width, height: frame.size.height))

        let imageOfNumberDots = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return imageOfNumberDots!
    }

    open class func imageOfNumber2(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0)
            Numerals.drawNumber2(frame: CGRect(x: 0, y: 0, width: frame.size.width, height: frame.size.height))

        let imageOfNumber2 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return imageOfNumber2!
    }

    open class func imageOfNumber3(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0)
            Numerals.drawNumber3(frame: CGRect(x: 0, y: 0, width: frame.size.width, height: frame.size.height))

        let imageOfNumber3 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return imageOfNumber3!
    }

    open class func imageOfNumber4(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0)
            Numerals.drawNumber4(frame: CGRect(x: 0, y: 0, width: frame.size.width, height: frame.size.height))

        let imageOfNumber4 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return imageOfNumber4!
    }

    open class func imageOfNumber5(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0)
            Numerals.drawNumber5(frame: CGRect(x: 0, y: 0, width: frame.size.width, height: frame.size.height))

        let imageOfNumber5 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return imageOfNumber5!
    }

    open class func imageOfNumber6(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0)
            Numerals.drawNumber6(frame: CGRect(x: 0, y: 0, width: frame.size.width, height: frame.size.height))

        let imageOfNumber6 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return imageOfNumber6!
    }

    open class func imageOfNumber7(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0)
            Numerals.drawNumber7(frame: CGRect(x: 0, y: 0, width: frame.size.width, height: frame.size.height))

        let imageOfNumber7 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return imageOfNumber7!
    }

    open class func imageOfNumber8(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0)
            Numerals.drawNumber8(frame: CGRect(x: 0, y: 0, width: frame.size.width, height: frame.size.height))

        let imageOfNumber8 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return imageOfNumber8!
    }

    open class func imageOfNumber9(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0)
            Numerals.drawNumber9(frame: CGRect(x: 0, y: 0, width: frame.size.width, height: frame.size.height))

        let imageOfNumber9 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return imageOfNumber9!
    }

    open class func imageOfNumber0(frame: CGRect = CGRect(x: 0, y: 0, width: 168, height: 306)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(frame.size, false, 0)
            Numerals.drawNumber0(frame: CGRect(x: 0, y: 0, width: frame.size.width, height: frame.size.height))

        let imageOfNumber0 = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()

        return imageOfNumber0!
    }

}
